# this class is used to configure the salt minion config file
class puppet-salt::minion::config (
  $minion_config_manage               = $puppet-salt::minion::minion_config_manage,
  $minion_config                      = $puppet-salt::minion::minion_config,
  $minion_config_template             = $puppet-salt::minion::minion_config_template,
  $minion_default_include             = $puppet-salt::minion::minion_default_include,
  $minion_master                      = $puppet-salt::minion::minion_master,
  $minion_random_master               = $puppet-salt::minion::minion_random_master,
  $minion_master_type                 = $puppet-salt::minion::minion_master_type,
  $minion_master_alive_interval       = $puppet-salt::minion::minion_master_alive_interval,
  $minion_ipv6                        = $puppet-salt::minion::minion_ipv6,
  $minion_retry_dns                   = $puppet-salt::minion::minion_retry_dns,
  $minion_master_port                 = $puppet-salt::minion::minion_master_port,
  $minion_user                        = $puppet-salt::minion::minion_user,
  $minion_sudo_user                   = $puppet-salt::minion::minion_sudo_user,
  $minion_pidfile                     = $puppet-salt::minion::minion_pidfile,
  $minion_root_dir                    = $puppet-salt::minion::minion_root_dir,
  $minion_pki_dir                     = $puppet-salt::minion::minion_pki_dir,
  $minion_id                          = $puppet-salt::minion::minion_id,
  $minion_append_domain               = $puppet-salt::minion::minion_append_domain,
  $minion_cachedir                    = $puppet-salt::minion::minion_cachedir,
  $minion_verify_env                  = $puppet-salt::minion::minion_verify_env,
  $minion_cache_jobs                  = $puppet-salt::minion::minion_cache_jobs,
  $minion_sock_dir                    = $puppet-salt::minion::minion_sock_dir,
  $minion_output                      = $puppet-salt::minion::minion_output,
  $minion_color                       = $puppet-salt::minion::minion_color,
  $minion_strip_colors                = $puppet-salt::minion::minion_strip_colors,
  $minion_backup_mode                 = $puppet-salt::minion::minion_backup_mode,
  $minion_acceptance_wait_time        = $puppet-salt::minion::minion_acceptance_wait_time,
  $minion_acceptance_wait_time_max    = $puppet-salt::minion::minion_acceptance_wait_time_max,
  $minion_rejected_retry              = $puppet-salt::minion::minion_rejected_retry,
  $minion_random_reauth_delay         = $puppet-salt::minion::minion_random_reauth_delay,
  $minion_auth_timeout                = $puppet-salt::minion::minion_auth_timeout,
  $minion_auth_tries                  = $puppet-salt::minion::minion_auth_tries,
  $minion_auth_safemode               = $puppet-salt::minion::minion_auth_safemode,
  $minion_ping_interval               = $puppet-salt::minion::minion_ping_interval,
  $minion_recon_default               = $puppet-salt::minion::minion_recon_default,
  $minion_recon_max                   = $puppet-salt::minion::minion_recon_max,
  $minion_recon_randomize             = $puppet-salt::minion::minion_recon_randomize,
  $minion_loop_interval               = $puppet-salt::minion::minion_loop_interval,
  $minion_grains_refresh_every        = $puppet-salt::minion::minion_grains_refresh_every,
  $minion_grains_cache                = $puppet-salt::minion::minion_grains_cache,
  $minion_grains_cache_expiration     = $puppet-salt::minion::minion_grains_cache_expiration,
  $minion_ipc_mode                    = $puppet-salt::minion::minion_ipc_mode,
  $minion_tcp_pub_port                = $puppet-salt::minion::minion_tcp_pub_port,
  $minion_tcp_pull_port               = $puppet-salt::minion::minion_tcp_pull_port,
  $minion_max_event_size              = $puppet-salt::minion::minion_max_event_size,
  $minion_disable_modules             = $puppet-salt::minion::minion_disable_modules,
  $minion_disable_returners           = $puppet-salt::minion::minion_disable_returners,
  $minion_module_dirs                 = $puppet-salt::minion::minion_module_dirs,
  $minion_returner_dirs               = $puppet-salt::minion::minion_returner_dirs,
  $minion_states_dirs                 = $puppet-salt::minion::minion_states_dirs,
  $minion_render_dirs                 = $puppet-salt::minion::minion_render_dirs,
  $minion_utils_dirs                  = $puppet-salt::minion::minion_utils_dirs,
  $minion_providers                   = $puppet-salt::minion::minion_providers,
  $minion_cython_enable               = $puppet-salt::minion::minion_cython_enable,
  $minion_modules_max_memory          = $puppet-salt::minion::minion_modules_max_memory,
  $minion_renderer                    = $puppet-salt::minion::minion_renderer,
  $minion_failhard                    = $puppet-salt::minion::minion_failhard,
  $minion_autoload_dynamic_modules    = $puppet-salt::minion::minion_autoload_dynamic_modules,
  $minion_clean_dynamic_modules       = $puppet-salt::minion::minion_clean_dynamic_modules,
  $minion_environment                 = $puppet-salt::minion::minion_environment,
  $minion_state_top                   = $puppet-salt::minion::minion_state_top,
  $minion_startup_states              = $puppet-salt::minion::minion_startup_states,
  $minion_sls_list                    = $puppet-salt::minion::minion_sls_list,
  $minion_top_file                    = $puppet-salt::minion::minion_top_file,
  $minion_state_aggregate             = $puppet-salt::minion::minion_state_aggregate,
  $minion_file_client                 = $puppet-salt::minion::minion_file_client,
  $minion_file_roots                  = $puppet-salt::minion::minion_file_roots,
  $minion_fileserver_limit_traversal  = $puppet-salt::minion::minion_fileserver_limit_traversal,
  $minion_hash_type                   = $puppet-salt::minion::minion_hash_type,
  $minion_pillar_roots                = $puppet-salt::minion::minion_pillar_roots,
  $minion_open_mode                   = $puppet-salt::minion::minion_open_mode,
  $minion_permissive_pki_access       = $puppet-salt::minion::minion_permissive_pki_access,
  $minion_state_verbose               = $puppet-salt::minion::minion_state_verbose,
  $minion_state_output                = $puppet-salt::minion::minion_state_output,
  $minion_state_output_diff           = $puppet-salt::minion::minion_state_output_diff,
  $minion_state_output_profile        = $puppet-salt::minion::minion_state_output_profile,
  $minion_master_finger               = $puppet-salt::minion::minion_master_finger,
  $minion_multiprocessing             = $puppet-salt::minion::minion_multiprocessing,
  $minion_log_file                    = $puppet-salt::minion::minion_log_file,
  $minion_key_logfile                 = $puppet-salt::minion::minion_key_logfile,
  $minion_log_level                   = $puppet-salt::minion::minion_log_level,
  $minion_log_level_logfile           = $puppet-salt::minion::minion_log_level_logfile,
  $minion_log_datefmt                 = $puppet-salt::minion::minion_log_datefmt,
  $minion_log_datefmt_logfile         = $puppet-salt::minion::minion_log_datefmt_logfile,
  $minion_log_fmt_console             = $puppet-salt::minion::minion_log_fmt_console,
  $minion_log_fmt_logfile             = $puppet-salt::minion::minion_log_fmt_logfile,
  $minion_log_granular_levels         = $puppet-salt::minion::minion_log_granular_levels,
  $minion_zmq_monitor                 = $puppet-salt::minion::minion_zmq_monitor,
  $minion_test                        = $puppet-salt::minion::minion_test,
  $minion_update_url                  = $puppet-salt::minion::minion_update_url,
  $minion_update_restart_services     = $puppet-salt::minion::minion_update_restart_services,
  $minion_tcp_keepalive               = $puppet-salt::minion::minion_tcp_keepalive,
  $minion_tcp_keepalive_idle          = $puppet-salt::minion::minion_tcp_keepalive_idle,
  $minion_tcp_keepalive_cnt           = $puppet-salt::minion::minion_tcp_keepalive_cnt,)
inherits puppet-salt::minion {
  # installs the master config file defined in puppet-salt::params
  file { $minion_config:
    ensure  => file,
    owner   => 0,
    group   => 0,
    mode    => '0664',
    content => template($minion_config_template),
    replace => $minion_config_manage,
  }
}
